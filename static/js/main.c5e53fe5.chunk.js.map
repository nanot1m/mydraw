{"version":3,"sources":["draw-elements-drawer/register-drawers.ts","draw-elements sync //.element/.ts$","draw-elements/Line.element.ts","draw-elements/Rect.element.ts","global-id.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createDrawElementConfig","config","drawElementConfigRegistry","getDrawElementConfigRegistry","r","require","keys","map","x","getAllDrawers","reduce","acc","drawElementConfig","name","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","Object","resolve","module","exports","draw","line","ctx","console","log","strokeStyle","color","beginPath","moveTo","x0","y0","lineTo","x1","y1","stroke","onCreate","y","onPointerMove","dx","dy","rect","strokeColor","fillStyle","backgroundColor","fill","initialState","drawElements","draftElement","activeTool","setActiveTool","tool","type","appReducer","state","action","element","props","concat","App","canvasRef","useRef","useReducer","dispatch","useEffect","resizeCanvas","canvas","current","dpr","window","devicePixelRatio","width","innerWidth","height","innerHeight","style","getContext","scale","addEventListener","removeEventListener","draftElementRef","activeElementConfig","lastClientX","lastClientY","handleMouseMove","ev","clientX","clientY","handlePointerDown","Date","now","toString","document","handlePointerUp","clearRect","forEach","drawElement","className","disabled","onClick","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iGA4BO,SAASA,EACdC,GAEA,OAAOA,EAGT,IAAIC,EAEG,SAASC,IACd,OAAiC,MAA7BD,EACKA,EAGTA,EA/BF,WACE,OALiBE,EAOfC,MANKD,EAAEE,OAAOC,IAAIH,IAOlBG,KAAI,SAACC,GAAD,OAA2CA,EAAEP,UARrD,IAAmBG,EAmCWK,GAAgBC,QAC1C,SAACC,EAAKC,GAEJ,OADAD,EAAIC,EAAkBC,MAAQD,EACvBD,IAET,IAxCJ,qE,2DCNA,IAAIJ,EAAM,CACT,oBAAqB,GACrB,oBAAqB,IAItB,SAASO,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEZ,EAAKQ,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOb,EAAIQ,GAEZD,EAAeR,KAAO,WACrB,OAAOiB,OAAOjB,KAAKC,IAEpBO,EAAeU,QAAUP,EACzBQ,EAAOC,QAAUZ,EACjBA,EAAeE,GAAK,I,6BCvBpB,yDAgBaf,EAASD,YAAwB,CAC5Ca,KAAM,OACNc,KAF4C,SAEvCC,EAAMC,GACTC,QAAQC,IAAIH,GACZC,EAAIG,YAAcJ,EAAKK,MACvBJ,EAAIK,YACJL,EAAIM,OAAOP,EAAKQ,GAAIR,EAAKS,IACzBR,EAAIS,OAAOV,EAAKW,GAAIX,EAAKY,IACzBX,EAAIY,UAENC,SAV4C,SAUnClC,EAAWmC,GAClB,MAAO,CACLV,MAAO,UACPG,GAAI5B,EACJ6B,GAAIM,EACJJ,GAAI/B,EACJgC,GAAIG,IAGRC,cAnB4C,SAmB9BC,EAAYC,EAAYlB,GACpC,MAAO,CACLW,GAAIX,EAAKW,GAAKM,EACdL,GAAIZ,EAAKY,GAAKM,O,6BCtCpB,yDAiBa7C,EAASD,YAAwB,CAC5Ca,KAAM,OACNc,KAF4C,SAEvCoB,EAAMlB,GACTA,EAAIG,YAAce,EAAKC,YACvBnB,EAAIoB,UAAYF,EAAKG,gBACrBrB,EAAIK,YACJL,EAAIkB,KAAKA,EAAKX,GAAIW,EAAKV,GAAIU,EAAKR,GAAKQ,EAAKX,GAAIW,EAAKP,GAAKO,EAAKV,IAC7DR,EAAIsB,OACJtB,EAAIY,UAENC,SAV4C,SAUnClC,EAAGmC,GACV,MAAO,CACLO,gBAAiB,OACjBF,YAAa,QACbZ,GAAI5B,EACJ6B,GAAIM,EACJJ,GAAI/B,EACJgC,GAAIG,IAGRC,cApB4C,SAoB9BC,EAAIC,EAAIC,GACpB,MAAO,CACLR,GAAIQ,EAAKR,GAAKM,EACdL,GAAIO,EAAKP,GAAKM,O,8GCtChB9B,EAAK,E,WCoBHoC,EAAyB,CAC7BC,aAAc,GACdC,aAAc,KACdC,WAAY,QAiBd,SAASC,EAAcC,GACrB,MAAO,CAAEC,KAAM,gBAAiBD,QASlC,SAASE,EAAWC,EAAiBC,GACnC,OAAQA,EAAOH,MACb,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEN,aAAcO,EAAOC,UAGzB,IAAK,qBACH,OAAKF,EAAMN,aAGJ,2BACFM,GADL,IAEEN,aAAa,2BACRM,EAAMN,cADC,IAEVS,MAAM,2BACDH,EAAMN,aAAaS,OACnBF,EAAOE,WARPH,EAaX,IAAK,mBACH,OAAKA,EAAMN,aAGJ,2BACFM,GADL,IAEEP,aAAcO,EAAMP,aAAaW,OAAOJ,EAAMN,cAC9CA,aAAc,OALPM,EAQX,IAAK,gBACH,OAAO,2BACFA,GADL,IAEEL,WAAYM,EAAOJ,QAK3B,IAAMvD,EAA4BC,cA2HnB8D,MAzHf,WACE,IAAMC,EAAYC,iBAA0B,MAD/B,EAEaC,qBAAWT,EAAYP,GAFpC,mBAENQ,EAFM,KAECS,EAFD,KAIbC,qBAAU,WACR,SAASC,IAAgB,IAAD,EAChBC,EAASN,EAAUO,QACzB,GAAKD,EAAL,CAGA,IAAME,EAAMC,OAAOC,kBAAoB,EACvCJ,EAAOK,MAAQF,OAAOG,WAAaJ,EACnCF,EAAOO,OAASJ,OAAOK,YAAcN,EACrCF,EAAOS,MAAMJ,MAAQF,OAAOG,WAAa,KACzCN,EAAOS,MAAMF,OAASJ,OAAOK,YAAc,KAC3C,UAAAR,EAAOU,WAAW,aAAlB,SAAyBC,MAAMT,EAAKA,IAKtC,OAFAC,OAAOS,iBAAiB,SAAUb,GAClCA,IACO,WACLI,OAAOU,oBAAoB,SAAUd,MAEtC,IAEH,IAAMe,EAAkBnB,iBAAOP,EAAMN,cA2ErC,OA1EAgC,EAAgBb,QAAUb,EAAMN,aAEhCgB,qBAAU,WACR,IAAMiB,EAAsBrF,EAA0B0D,EAAML,YAExDiC,EAAc,EACdC,EAAc,EAClB,SAASC,EAAgBC,GACQ,MAA3BL,EAAgBb,UAGpBJ,EAjGG,CAAEX,KAAM,qBAAsBK,MAmG7BwB,EAAoB3C,cAClB+C,EAAGC,QAAUJ,EACbG,EAAGE,QAAUJ,EACbH,EAAgBb,QAAQV,SAI9ByB,EAAcG,EAAGC,QACjBH,EAAcE,EAAGE,SAGnB,SAASC,EAAkBH,GACzBH,EAAcG,EAAGC,QACjBH,EAAcE,EAAGE,QACjBxB,EAvHG,CAAEX,KAAM,qBAAsBI,QAwHZ,CACjB9C,IDlJRA,KACQ+E,KAAKC,MAAQhF,GAAIiF,SAAS,KCkJ1BvC,KAAME,EAAML,WACZQ,MAAOwB,EAAoB7C,SAASiD,EAAGC,QAASD,EAAGE,YAGvDK,SAASd,iBAAiB,cAAeM,GAG3C,SAASS,IACP9B,EAxHG,CAAEX,KAAM,qBAyHXwC,SAASb,oBAAoB,cAAeK,GAM9C,OAHAQ,SAASd,iBAAiB,cAAeU,GACzCI,SAASd,iBAAiB,YAAae,GAEhC,WACLD,SAASb,oBAAoB,cAAeS,GAC5CI,SAASb,oBAAoB,YAAac,MAE3C,CAACvC,EAAML,aAEVe,qBAAU,WACR,IAAME,EAASN,EAAUO,QACzB,GAAc,MAAVD,EAAJ,CAGA,IAAM3C,EAAM2C,EAAOU,WAAW,MACnB,MAAPrD,IAIJA,EAAIuE,UAAU,EAAG,EAAG5B,EAAOK,MAAOL,EAAOO,QAEzCnB,EAAMP,aAAagD,SAAQ,SAACC,GAC1BpG,EAA0BoG,EAAY5C,MAAM/B,KAAK2E,EAAYvC,MAAOlC,MAElE+B,EAAMN,cACRpD,EAA0B0D,EAAMN,aAAaI,MAAM/B,KACjDiC,EAAMN,aAAaS,MACnBlC,OAGH,CAAC+B,EAAMP,aAAcO,EAAMN,eAG5B,sBAAKiD,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,wBACEC,SAA+B,SAArB5C,EAAML,WAChBkD,QAAS,kBAAMpC,EAASb,EAAc,UAFxC,eAMA,wBACEgD,SAA+B,SAArB5C,EAAML,WAChBkD,QAAS,kBAAMpC,EAASb,EAAc,UAFxC,kBAOF,wBAAQ+C,UAAU,cAAcG,IAAKxC,QCrM5ByC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.c5e53fe5.chunk.js","sourcesContent":["import {\n  DrawElementByType,\n  DrawElementType,\n} from \"../draw-elements/DrawElements\";\nimport { DrawElementsDrawer } from \"./DrawElementsDrawer\";\n\nfunction importAll(r: any) {\n  return r.keys().map(r);\n}\n\nfunction getAllDrawers(): DrawElementConfig<DrawElementType>[] {\n  return importAll(\n    // @ts-ignore\n    require.context(\"../draw-elements/\", true, /\\.element\\.ts$/)\n  ).map((x: { config: DrawElementConfig<any> }) => x.config);\n}\n\nexport interface DrawElementConfig<Type extends DrawElementType> {\n  name: Type;\n  draw: DrawElementsDrawer<Type>;\n  onCreate(x: number, y: number): DrawElementByType<Type>;\n  onPointerMove: (\n    dx: number,\n    dy: number,\n    element: DrawElementByType<Type>\n  ) => Partial<DrawElementByType<Type>>;\n}\n\nexport function createDrawElementConfig<Type extends DrawElementType>(\n  config: DrawElementConfig<Type>\n): DrawElementConfig<Type> {\n  return config;\n}\n\nlet drawElementConfigRegistry: Record<DrawElementType, DrawElementConfig<any>>;\n\nexport function getDrawElementConfigRegistry() {\n  if (drawElementConfigRegistry != null) {\n    return drawElementConfigRegistry;\n  }\n\n  drawElementConfigRegistry = getAllDrawers().reduce(\n    (acc, drawElementConfig) => {\n      acc[drawElementConfig.name] = drawElementConfig;\n      return acc;\n    },\n    {} as Record<DrawElementType, DrawElementConfig<any>>\n  );\n\n  return drawElementConfigRegistry;\n}\n","var map = {\n\t\"./Line.element.ts\": 14,\n\t\"./Rect.element.ts\": 15\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","import { createDrawElementConfig } from \"../draw-elements-drawer/register-drawers\";\n\nexport interface Line {\n  color: string;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Line: Line;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Line\",\n  draw(line, ctx) {\n    console.log(line);\n    ctx.strokeStyle = line.color;\n    ctx.beginPath();\n    ctx.moveTo(line.x0, line.y0);\n    ctx.lineTo(line.x1, line.y1);\n    ctx.stroke();\n  },\n  onCreate(x: number, y: number) {\n    return {\n      color: \"#000000\",\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y,\n    };\n  },\n  onPointerMove(dx: number, dy: number, line: Line) {\n    return {\n      x1: line.x1 + dx,\n      y1: line.y1 + dy,\n    };\n  },\n});\n","import { createDrawElementConfig } from \"../draw-elements-drawer/register-drawers\";\n\nexport interface Rect {\n  strokeColor: string;\n  backgroundColor: string;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Rect: Rect;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Rect\",\n  draw(rect, ctx) {\n    ctx.strokeStyle = rect.strokeColor;\n    ctx.fillStyle = rect.backgroundColor;\n    ctx.beginPath();\n    ctx.rect(rect.x0, rect.y0, rect.x1 - rect.x0, rect.y1 - rect.y0);\n    ctx.fill();\n    ctx.stroke();\n  },\n  onCreate(x, y) {\n    return {\n      backgroundColor: \"pink\",\n      strokeColor: \"black\",\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y,\n    };\n  },\n  onPointerMove(dx, dy, rect) {\n    return {\n      x1: rect.x1 + dx,\n      y1: rect.y1 + dy,\n    };\n  },\n});\n","export type GlobalId = string & { __TYPE__: \"GlobalId\" };\n\nlet id = 0;\nexport function getId(): GlobalId {\n  id++;\n  return (Date.now() + id).toString(32) as GlobalId;\n}\n","import { useEffect, useReducer, useRef } from \"react\";\nimport {\n  DrawElementByType,\n  DrawElements,\n  DrawElementType,\n} from \"./draw-elements/DrawElements\";\nimport \"./App.css\";\nimport { getDrawElementConfigRegistry } from \"./draw-elements-drawer/register-drawers\";\nimport { getId, GlobalId } from \"./global-id\";\n\ninterface DrawElement<Type extends keyof DrawElements = DrawElementType> {\n  type: Type;\n  id: GlobalId;\n  props: DrawElements[Type];\n}\n\ninterface AppState {\n  drawElements: DrawElement[];\n  draftElement: DrawElement | null;\n  activeTool: DrawElementType;\n}\n\nconst initialState: AppState = {\n  drawElements: [],\n  draftElement: null,\n  activeTool: \"Line\",\n};\n\nfunction createDraftElement(drawElement: DrawElement) {\n  return { type: \"createDraftElement\", element: drawElement } as const;\n}\n\nfunction updateDraftElement<Type extends DrawElementType>(\n  props: Partial<DrawElementByType<Type>>\n) {\n  return { type: \"updateDraftElement\", props } as const;\n}\n\nfunction saveDraftElement() {\n  return { type: \"saveDraftElement\" } as const;\n}\n\nfunction setActiveTool(tool: DrawElementType) {\n  return { type: \"setActiveTool\", tool } as const;\n}\n\ntype Action =\n  | ReturnType<typeof createDraftElement>\n  | ReturnType<typeof saveDraftElement>\n  | ReturnType<typeof setActiveTool>\n  | ReturnType<typeof updateDraftElement>;\n\nfunction appReducer(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case \"createDraftElement\":\n      return {\n        ...state,\n        draftElement: action.element,\n      };\n\n    case \"updateDraftElement\":\n      if (!state.draftElement) {\n        return state;\n      }\n      return {\n        ...state,\n        draftElement: {\n          ...state.draftElement,\n          props: {\n            ...state.draftElement.props,\n            ...action.props,\n          },\n        },\n      };\n\n    case \"saveDraftElement\":\n      if (!state.draftElement) {\n        return state;\n      }\n      return {\n        ...state,\n        drawElements: state.drawElements.concat(state.draftElement),\n        draftElement: null,\n      };\n\n    case \"setActiveTool\":\n      return {\n        ...state,\n        activeTool: action.tool,\n      };\n  }\n}\n\nconst drawElementConfigRegistry = getDrawElementConfigRegistry();\n\nfunction App() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  useEffect(() => {\n    function resizeCanvas() {\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        return;\n      }\n      const dpr = window.devicePixelRatio || 1;\n      canvas.width = window.innerWidth * dpr;\n      canvas.height = window.innerHeight * dpr;\n      canvas.style.width = window.innerWidth + \"px\";\n      canvas.style.height = window.innerHeight + \"px\";\n      canvas.getContext(\"2d\")?.scale(dpr, dpr);\n    }\n\n    window.addEventListener(\"resize\", resizeCanvas);\n    resizeCanvas();\n    return () => {\n      window.removeEventListener(\"resize\", resizeCanvas);\n    };\n  }, []);\n\n  const draftElementRef = useRef(state.draftElement);\n  draftElementRef.current = state.draftElement;\n\n  useEffect(() => {\n    const activeElementConfig = drawElementConfigRegistry[state.activeTool];\n\n    let lastClientX = 0;\n    let lastClientY = 0;\n    function handleMouseMove(ev: MouseEvent) {\n      if (draftElementRef.current == null) {\n        return;\n      }\n      dispatch(\n        updateDraftElement(\n          activeElementConfig.onPointerMove(\n            ev.clientX - lastClientX,\n            ev.clientY - lastClientY,\n            draftElementRef.current.props\n          )\n        )\n      );\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n    }\n\n    function handlePointerDown(ev: MouseEvent) {\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n      dispatch(\n        createDraftElement({\n          id: getId(),\n          type: state.activeTool,\n          props: activeElementConfig.onCreate(ev.clientX, ev.clientY),\n        })\n      );\n      document.addEventListener(\"pointermove\", handleMouseMove);\n    }\n\n    function handlePointerUp() {\n      dispatch(saveDraftElement());\n      document.removeEventListener(\"pointermove\", handleMouseMove);\n    }\n\n    document.addEventListener(\"pointerdown\", handlePointerDown);\n    document.addEventListener(\"pointerup\", handlePointerUp);\n\n    return () => {\n      document.removeEventListener(\"pointerdown\", handlePointerDown);\n      document.removeEventListener(\"pointerup\", handlePointerUp);\n    };\n  }, [state.activeTool]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas == null) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx == null) {\n      return;\n    }\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    state.drawElements.forEach((drawElement) => {\n      drawElementConfigRegistry[drawElement.type].draw(drawElement.props, ctx);\n    });\n    if (state.draftElement) {\n      drawElementConfigRegistry[state.draftElement.type].draw(\n        state.draftElement.props,\n        ctx\n      );\n    }\n  }, [state.drawElements, state.draftElement]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__toolbar\">\n        <button\n          disabled={state.activeTool === \"Line\"}\n          onClick={() => dispatch(setActiveTool(\"Line\"))}\n        >\n          L\n        </button>\n        <button\n          disabled={state.activeTool === \"Rect\"}\n          onClick={() => dispatch(setActiveTool(\"Rect\"))}\n        >\n          R\n        </button>\n      </div>\n      <canvas className=\"App__canvas\" ref={canvasRef}></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
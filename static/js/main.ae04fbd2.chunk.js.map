{"version":3,"sources":["draw-elements-drawer/DrawElementConfig.ts","draw-elements sync //.element/.ts$","draw-elements/Line.element.ts","draw-elements/Rect.element.ts","draw-elements-drawer/get-draw-element-config-registry.ts","global-id.ts","Island.tsx","state-history.ts","App.tsx","reportWebVitals.ts","index.tsx","freehand-draw.ts","draw-elements/Draw.element.ts"],"names":["BoundingBoxTable","WeakMap","createDrawElementConfig","config","resultConfig","__TYPE__","getBoundingBox","element","has","set","get","containsPoint","point","rect","x","y","width","height","isDrawElementConfig","obj","Reflect","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","name","draw","line","ctx","lineWidth","strokeStyle","color","beginPath","moveTo","x0","y0","lineTo","x1","y1","stroke","onCreate","onDrawing","dx","dy","Math","min","abs","max","shift","strokeColor","fillStyle","backgroundColor","fill","drawElementConfigRegistry","getAllDrawElementConfigs","r","require","TypeError","assertDrawElementConfigModule","Island","props","className","children","linkedListNode","value","prev","next","StateHistory","maxLength","this","newNode","reduce","acc","drawElementConfig","elementTypes","initialState","drawElements","draftElement","selectedElements","hoveredElement","activeTool","scrollPoint","updateScrollPoint","scrollPointShift","type","setDrawElements","appReducer","state","action","drawElementId","concat","tool","selectedElementsSet","Set","drawElement","ORIGINAL_CURSOR_STYLE","App","canvasRef","useRef","useReducer","dispatch","history","useState","of","hasNext","setHasNext","hasPrev","setHasPrev","useEffect","push","goBack","goForward","useHistory","lastState","current","resizeCanvas","canvas","dpr","window","devicePixelRatio","innerWidth","innerHeight","style","getContext","scale","drawScene","addEventListener","removeEventListener","useCanvasAutoResize","draftElementRef","activeElementConfig","lastClientX","lastClientY","handlePointerDown","ev","target","preventDefault","clientX","clientY","buttons","document","handlePointerMoveWhileDragging","handlePointerUpWhileDragging","Date","now","toString","handlePointerMoveWhileDrawing","handlePointerUpWhileDrawing","cursor","handlePointerMoveWhileScrolling","handlePointerUpWhileScrolling","handleWheel","deltaX","deltaY","elementType","disabled","onClick","ref","onMouseMove","i","length","getDrawElementAtPoint","scrollX","scrollY","clearRect","translate","forEach","save","boundingBox","setLineDash","BOUNDING_BOX_LINE_DASH","strokeRect","BOUNDING_BOX_DELTA","restore","drawBoundingBox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","freehandDraw","points","pathData","d","arr","join","getSvgPathFromStroke","getStroke","Path2D","p"],"mappings":"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","file":"static/js/main.ae04fbd2.chunk.js","sourcesContent":["import {\n  DrawElementByType,\n  DrawElementType,\n} from \"../draw-elements/DrawElements\";\nimport { Point2D } from \"../Point2D\";\nimport { DrawElementsDrawer } from \"./DrawElementsDrawer\";\n\ntype BoundingBox = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nexport interface DrawElementConfig<Type extends DrawElementType> {\n  name: Type;\n  draw: DrawElementsDrawer<Type>;\n  onCreate(x: number, y: number): DrawElementByType<Type>;\n  onDrawing(\n    dx: number,\n    dy: number,\n    element: DrawElementByType<Type>\n  ): Partial<DrawElementByType<Type>>;\n  getBoundingBox(element: DrawElementByType<Type>): BoundingBox;\n  containsPoint(element: DrawElementByType<Type>, point: Point2D): boolean;\n  shift(\n    element: DrawElementByType<Type>,\n    point: Point2D\n  ): DrawElementByType<Type>;\n}\n\nconst BoundingBoxTable = new WeakMap<\n  DrawElementByType<DrawElementType>,\n  BoundingBox\n>();\n\nconst CONTAINS_THRESHOLD = 10;\n\nexport function createDrawElementConfig<Type extends DrawElementType>(\n  config: DrawElementConfig<Type>\n): DrawElementConfig<Type> & { __TYPE__: \"DrawElementConfig\" } {\n  const resultConfig: DrawElementConfig<Type> & {\n    __TYPE__: \"DrawElementConfig\";\n  } = {\n    ...config,\n    __TYPE__: \"DrawElementConfig\",\n    getBoundingBox(element: DrawElementByType<Type>): BoundingBox {\n      if (!BoundingBoxTable.has(element)) {\n        BoundingBoxTable.set(element, config.getBoundingBox(element));\n      }\n      return BoundingBoxTable.get(element)!;\n    },\n    containsPoint(element: DrawElementByType<Type>, point: Point2D): boolean {\n      const rect = resultConfig.getBoundingBox(element);\n      const [x, y] = point;\n      const isInsideRect =\n        rect.x - CONTAINS_THRESHOLD <= x &&\n        rect.x + rect.width + CONTAINS_THRESHOLD >= x &&\n        rect.y - CONTAINS_THRESHOLD <= y &&\n        rect.y + rect.height + CONTAINS_THRESHOLD >= y;\n      if (isInsideRect) {\n        return config.containsPoint(element, point);\n      }\n      return false;\n    },\n  };\n  return resultConfig;\n}\n\nexport function isDrawElementConfig(\n  obj: unknown\n): obj is DrawElementConfig<DrawElementType> {\n  return (\n    typeof obj === \"object\" &&\n    obj != null &&\n    Reflect.get(obj, \"__TYPE__\") === \"DrawElementConfig\"\n  );\n}\n","var map = {\n\t\"./Draw.element.ts\": 27,\n\t\"./Line.element.ts\": 22,\n\t\"./Rect.element.ts\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\n\nexport interface Line {\n  color: string;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Line: Line;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Line\",\n  draw(line, ctx) {\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = line.color;\n    ctx.beginPath();\n    ctx.moveTo(line.x0, line.y0);\n    ctx.lineTo(line.x1, line.y1);\n    ctx.stroke();\n  },\n  onCreate(x: number, y: number) {\n    return {\n      color: \"#000000\",\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y,\n    };\n  },\n  onDrawing(dx: number, dy: number, line: Line) {\n    return {\n      x1: line.x1 + dx,\n      y1: line.y1 + dy,\n    };\n  },\n  getBoundingBox(line: Line) {\n    return {\n      x: Math.min(line.x0, line.x1),\n      y: Math.min(line.y0, line.y1),\n      width: Math.abs(line.x0 - line.x1),\n      height: Math.abs(line.y0 - line.y1),\n    };\n  },\n  containsPoint(line, [x, y]) {\n    return (\n      Math.min(line.x0, line.x1) <= x &&\n      Math.max(line.x0, line.x1) >= x &&\n      Math.min(line.y0, line.y1) <= y &&\n      Math.max(line.y0, line.y1) >= y\n    );\n  },\n  shift(line, [dx, dy]) {\n    return {\n      ...line,\n      x0: line.x0 + dx,\n      y0: line.y0 + dy,\n      x1: line.x1 + dx,\n      y1: line.y1 + dy,\n    };\n  },\n});\n","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\n\nexport interface Rect {\n  strokeColor: string;\n  backgroundColor: string;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Rect: Rect;\n  }\n}\n\nconst CONTAINS_THRESHOLD = 4;\n\nexport const config = createDrawElementConfig({\n  name: \"Rect\",\n  draw(rect, ctx) {\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = rect.strokeColor;\n    ctx.fillStyle = rect.backgroundColor;\n    ctx.beginPath();\n    ctx.rect(rect.x0, rect.y0, rect.x1 - rect.x0, rect.y1 - rect.y0);\n    ctx.fill();\n    ctx.stroke();\n  },\n  onCreate(x, y) {\n    return {\n      backgroundColor: \"transparent\",\n      strokeColor: \"black\",\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y,\n    };\n  },\n  onDrawing(dx, dy, rect) {\n    return {\n      x1: rect.x1 + dx,\n      y1: rect.y1 + dy,\n    };\n  },\n  getBoundingBox(rect) {\n    return {\n      x: Math.min(rect.x0, rect.x1),\n      y: Math.min(rect.y0, rect.y1),\n      width: Math.abs(rect.x1 - rect.x0),\n      height: Math.abs(rect.y1 - rect.y0),\n    };\n  },\n  containsPoint(rect, [x, y]) {\n    return (\n      Math.min(rect.x0, rect.x1) - CONTAINS_THRESHOLD <= x &&\n      Math.max(rect.x0, rect.x1) + CONTAINS_THRESHOLD >= x &&\n      Math.min(rect.y0, rect.y1) - CONTAINS_THRESHOLD <= y &&\n      Math.max(rect.y0, rect.y1) + CONTAINS_THRESHOLD >= y\n    );\n  },\n  shift(rect, [dx, dy]) {\n    return {\n      ...rect,\n      x0: rect.x0 + dx,\n      y0: rect.y0 + dy,\n      x1: rect.x1 + dx,\n      y1: rect.y1 + dy,\n    };\n  },\n});\n","import { DrawElementType } from \"../draw-elements/DrawElements\";\nimport { DrawElementConfig, isDrawElementConfig } from \"./DrawElementConfig\";\n\nfunction importAll(r: __WebpackModuleApi.RequireContext) {\n  return r.keys().map(r);\n}\n\nfunction assertDrawElementConfigModule(\n  module: unknown\n): asserts module is { config: DrawElementConfig<any> } {\n  if (\n    typeof module !== \"object\" ||\n    module == null ||\n    !isDrawElementConfig(Reflect.get(module, \"config\"))\n  ) {\n    throw new TypeError(\n      \"*.element.ts files must be a module exporting `config` object\"\n    );\n  }\n}\n\nfunction getAllDrawElementConfigs(): DrawElementConfig<DrawElementType>[] {\n  return importAll(\n    require.context(\"../draw-elements/\", true, /\\.element\\.ts$/)\n  ).map((module) => {\n    assertDrawElementConfigModule(module);\n    return module.config;\n  });\n}\n\nlet drawElementConfigRegistry: Record<DrawElementType, DrawElementConfig<any>>;\n\nexport function getDrawElementConfigRegistry() {\n  if (drawElementConfigRegistry != null) {\n    return drawElementConfigRegistry;\n  }\n\n  drawElementConfigRegistry = getAllDrawElementConfigs().reduce(\n    (acc, drawElementConfig) => {\n      acc[drawElementConfig.name] = drawElementConfig;\n      return acc;\n    },\n    {} as Record<DrawElementType, DrawElementConfig<any>>\n  );\n\n  return drawElementConfigRegistry;\n}\n","export type GlobalId = string & { __TYPE__: \"GlobalId\" };\n\nlet id = 0;\nexport function getId(): GlobalId {\n  id++;\n  return (Date.now() + id).toString(32) as GlobalId;\n}\n","import { ReactNode } from \"react\";\n\nimport \"./Island.css\";\n\nexport function Island(props: { children: ReactNode; className?: string }) {\n  return (\n    <div className={\"Island\" + (props.className ? ` ${props.className}` : \"\")}>\n      {props.children}\n    </div>\n  );\n}\n","interface LinkedListNode<T> {\n  value: T;\n  next: LinkedListNode<T> | null;\n  prev: LinkedListNode<T> | null;\n}\n\nfunction linkedListNode<T>(\n  value: T,\n  prev: LinkedListNode<T> | null = null,\n  next: LinkedListNode<T> | null = null\n): LinkedListNode<T> {\n  return {\n    value,\n    next,\n    prev,\n  };\n}\n\nexport class StateHistory<T> {\n  public static of<T>(value: T, maxLength = 100) {\n    return new StateHistory(value, maxLength);\n  }\n\n  #maxLength: number;\n\n  #size = 1;\n\n  #head: LinkedListNode<T>;\n\n  #curNode: LinkedListNode<T>;\n\n  private constructor(value: T, maxLength: number) {\n    this.#head = this.#curNode = linkedListNode(value);\n    this.#maxLength = maxLength;\n  }\n\n  public get(): T {\n    return this.#curNode.value;\n  }\n\n  public push(value: T) {\n    const newNode = linkedListNode(value, this.#curNode);\n    this.#curNode.next = newNode;\n    this.#curNode = newNode;\n    this.#size++;\n\n    while (this.#size > this.#maxLength && this.#head.next) {\n      if (this.#curNode === this.#head && this.#curNode.next) {\n        this.#curNode = this.#curNode.next;\n        this.#curNode.prev = null;\n      }\n      this.#head = this.#head.next;\n      this.#head.prev = null;\n      this.#size--;\n    }\n\n    return this;\n  }\n\n  public goBack() {\n    if (this.#curNode.prev != null) {\n      this.#curNode = this.#curNode.prev;\n      this.#size--;\n    }\n    return this;\n  }\n\n  public goForward() {\n    if (this.#curNode.next != null) {\n      this.#curNode = this.#curNode.next;\n      this.#size++;\n    }\n    return this;\n  }\n\n  public hasPrev() {\n    return this.#curNode.prev != null;\n  }\n\n  public hasNext() {\n    return this.#curNode.next != null;\n  }\n}\n","import { RefObject, useEffect, useReducer, useRef, useState } from \"react\";\nimport {\n  DrawElementByType,\n  DrawElements,\n  DrawElementType,\n} from \"./draw-elements/DrawElements\";\nimport \"./App.css\";\nimport { getDrawElementConfigRegistry } from \"./draw-elements-drawer/get-draw-element-config-registry\";\nimport { getId, GlobalId } from \"./global-id\";\nimport { Island } from \"./Island\";\nimport { StateHistory } from \"./state-history\";\nimport { Point2D } from \"./Point2D\";\n\ninterface DrawElement<Type extends keyof DrawElements = DrawElementType> {\n  type: Type;\n  id: GlobalId;\n  props: DrawElements[Type];\n}\n\nconst drawElementConfigRegistry = getDrawElementConfigRegistry();\n\nconst elementTypes = Object.keys(\n  drawElementConfigRegistry\n) as DrawElementType[];\n\ninterface AppState {\n  drawElements: DrawElement[];\n  draftElement: DrawElement | null;\n  selectedElements: GlobalId[];\n  hoveredElement: GlobalId | null;\n  activeTool: DrawElementType;\n  scrollPoint: Point2D;\n}\n\nconst initialState: AppState = {\n  drawElements: [],\n  draftElement: null,\n  selectedElements: [],\n  hoveredElement: null,\n  activeTool: elementTypes[0],\n  scrollPoint: [0, 0],\n};\n\nfunction createDraftElement(drawElement: DrawElement) {\n  return { type: \"createDraftElement\", element: drawElement } as const;\n}\n\nfunction updateDraftElement<Type extends DrawElementType>(\n  props: Partial<DrawElementByType<Type>>\n) {\n  return { type: \"updateDraftElement\", props } as const;\n}\n\nfunction saveDraftElement() {\n  return { type: \"saveDraftElement\" } as const;\n}\n\nfunction updateScrollPoint(scrollPointShift: Point2D) {\n  return { type: \"updateScrollPoint\", scrollPointShift } as const;\n}\n\nfunction setActiveTool(tool: DrawElementType) {\n  return { type: \"setActiveTool\", tool } as const;\n}\n\nfunction setDrawElements(drawElements: DrawElement[]) {\n  return { type: \"setDrawElements\", drawElements } as const;\n}\n\nfunction setHoveredElement(drawElementId: GlobalId | null) {\n  return { type: \"setHoveredElement\", drawElementId } as const;\n}\n\nfunction dragSelectedDrawElements(shift: Point2D) {\n  return { type: \"dragSelectedDrawElements\", shift } as const;\n}\n\nfunction selectElement(drawElementId: GlobalId | null) {\n  return { type: \"selectElement\", drawElementId } as const;\n}\n\ntype Action =\n  | ReturnType<typeof createDraftElement>\n  | ReturnType<typeof saveDraftElement>\n  | ReturnType<typeof setActiveTool>\n  | ReturnType<typeof setDrawElements>\n  | ReturnType<typeof updateScrollPoint>\n  | ReturnType<typeof setHoveredElement>\n  | ReturnType<typeof dragSelectedDrawElements>\n  | ReturnType<typeof selectElement>\n  | ReturnType<typeof updateDraftElement>;\n\nfunction appReducer(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case \"createDraftElement\":\n      return {\n        ...state,\n        draftElement: action.element,\n        selectedElements: [],\n      };\n\n    case \"selectElement\":\n      return {\n        ...state,\n        selectedElements: action.drawElementId ? [action.drawElementId] : [],\n      };\n\n    case \"updateDraftElement\":\n      if (!state.draftElement) {\n        return state;\n      }\n      return {\n        ...state,\n        draftElement: {\n          ...state.draftElement,\n          props: {\n            ...state.draftElement.props,\n            ...action.props,\n          },\n        },\n      };\n\n    case \"saveDraftElement\":\n      if (!state.draftElement) {\n        return state;\n      }\n      return {\n        ...state,\n        drawElements: state.drawElements.concat(state.draftElement),\n        selectedElements: [state.draftElement.id],\n        draftElement: null,\n      };\n\n    case \"setActiveTool\":\n      return {\n        ...state,\n        activeTool: action.tool,\n      };\n\n    case \"setDrawElements\":\n      return {\n        ...state,\n        drawElements: action.drawElements,\n      };\n\n    case \"updateScrollPoint\":\n      return {\n        ...state,\n        scrollPoint: [\n          state.scrollPoint[0] + action.scrollPointShift[0],\n          state.scrollPoint[1] + action.scrollPointShift[1],\n        ],\n      };\n\n    case \"setHoveredElement\":\n      return {\n        ...state,\n        hoveredElement: action.drawElementId,\n      };\n\n    case \"dragSelectedDrawElements\": {\n      const selectedElementsSet = new Set(state.selectedElements);\n      return {\n        ...state,\n        drawElements: state.drawElements.map((drawElement) => {\n          if (selectedElementsSet.has(drawElement.id)) {\n            const config = drawElementConfigRegistry[drawElement.type];\n            return {\n              ...drawElement,\n              props: config.shift(drawElement.props, action.shift),\n            };\n          }\n          return drawElement;\n        }),\n      };\n    }\n  }\n}\n\nfunction useHistory<T>(state: T) {\n  const [history] = useState(() => StateHistory.of(state));\n  const [hasNext, setHasNext] = useState(history.hasNext());\n  const [hasPrev, setHasPrev] = useState(history.hasPrev());\n\n  useEffect(() => {\n    if (history.get() !== state) {\n      history.push(state);\n      setHasPrev(history.hasPrev());\n      setHasNext(history.hasNext());\n    }\n  }, [history, state]);\n\n  return {\n    hasPrev,\n    hasNext,\n    goBack() {\n      history.goBack();\n      setHasPrev(history.hasPrev());\n      setHasNext(history.hasNext());\n      return history.get();\n    },\n    goForward() {\n      history.goForward();\n      setHasPrev(history.hasPrev());\n      setHasNext(history.hasNext());\n      return history.get();\n    },\n  };\n}\n\nconst ORIGINAL_CURSOR_STYLE = \"crosshair\";\n\nfunction App() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  const history = useHistory(state.drawElements);\n\n  function goBack() {\n    if (history.hasPrev) {\n      const drawElements = history.goBack();\n      dispatch(setDrawElements(drawElements));\n    }\n  }\n\n  function goForward() {\n    if (history.hasNext) {\n      const drawElements = history.goForward();\n      dispatch(setDrawElements(drawElements));\n    }\n  }\n\n  useCanvasAutoResize(state, canvasRef);\n\n  const draftElementRef = useRef(state.draftElement);\n  draftElementRef.current = state.draftElement;\n\n  useEffect(() => {\n    const activeElementConfig = drawElementConfigRegistry[state.activeTool];\n\n    let lastClientX = 0;\n    let lastClientY = 0;\n\n    function handlePointerDown(ev: MouseEvent) {\n      if (ev.target !== canvasRef.current) {\n        return;\n      }\n\n      ev.preventDefault();\n\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n\n      if (ev.buttons === 1) {\n        if (state.hoveredElement) {\n          dispatch(selectElement(state.hoveredElement));\n          document.addEventListener(\n            \"pointermove\",\n            handlePointerMoveWhileDragging\n          );\n          document.addEventListener(\"pointerup\", handlePointerUpWhileDragging);\n          return;\n        }\n\n        dispatch(\n          createDraftElement({\n            id: getId(),\n            type: state.activeTool,\n            props: activeElementConfig.onCreate(\n              ev.clientX - state.scrollPoint[0],\n              ev.clientY - state.scrollPoint[1]\n            ),\n          })\n        );\n        document.addEventListener(\"pointermove\", handlePointerMoveWhileDrawing);\n        document.addEventListener(\"pointerup\", handlePointerUpWhileDrawing);\n      }\n\n      if (ev.buttons === 4) {\n        if (canvasRef.current) canvasRef.current.style.cursor = \"grab\";\n        document.addEventListener(\n          \"pointermove\",\n          handlePointerMoveWhileScrolling\n        );\n        document.addEventListener(\"pointerup\", handlePointerUpWhileScrolling);\n      }\n    }\n\n    function handlePointerMoveWhileScrolling(ev: MouseEvent) {\n      const dx = ev.clientX - lastClientX;\n      const dy = ev.clientY - lastClientY;\n      dispatch(updateScrollPoint([dx, dy]));\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n    }\n\n    function handlePointerUpWhileScrolling() {\n      if (canvasRef.current)\n        canvasRef.current.style.cursor = ORIGINAL_CURSOR_STYLE;\n      document.removeEventListener(\n        \"pointermove\",\n        handlePointerMoveWhileScrolling\n      );\n      document.removeEventListener(\"pointerup\", handlePointerUpWhileScrolling);\n    }\n\n    function handlePointerMoveWhileDragging(ev: MouseEvent) {\n      const dx = ev.clientX - lastClientX;\n      const dy = ev.clientY - lastClientY;\n      dispatch(dragSelectedDrawElements([dx, dy]));\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n    }\n\n    function handlePointerUpWhileDragging() {\n      if (canvasRef.current)\n        canvasRef.current.style.cursor = ORIGINAL_CURSOR_STYLE;\n      document.removeEventListener(\n        \"pointermove\",\n        handlePointerMoveWhileDragging\n      );\n      document.removeEventListener(\"pointerup\", handlePointerUpWhileDragging);\n    }\n\n    function handlePointerMoveWhileDrawing(ev: MouseEvent) {\n      if (draftElementRef.current == null) {\n        return;\n      }\n      dispatch(\n        updateDraftElement(\n          activeElementConfig.onDrawing(\n            ev.clientX - lastClientX,\n            ev.clientY - lastClientY,\n            draftElementRef.current.props\n          )\n        )\n      );\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n    }\n\n    function handlePointerUpWhileDrawing() {\n      dispatch(saveDraftElement());\n      document.removeEventListener(\n        \"pointermove\",\n        handlePointerMoveWhileDrawing\n      );\n      document.removeEventListener(\"pointerup\", handlePointerUpWhileDrawing);\n    }\n\n    function handleWheel(ev: WheelEvent) {\n      dispatch(updateScrollPoint([-ev.deltaX, -ev.deltaY]));\n    }\n\n    document.addEventListener(\"wheel\", handleWheel);\n\n    document.addEventListener(\"pointerdown\", handlePointerDown);\n\n    return () => {\n      document.removeEventListener(\"pointerdown\", handlePointerDown);\n      document.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, [state.activeTool, state.hoveredElement, state.scrollPoint]);\n\n  useEffect(() => {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (ctx == null) {\n      return;\n    }\n    drawScene(\n      ctx,\n      state.drawElements,\n      state.draftElement,\n      state.selectedElements,\n      state.scrollPoint\n    );\n  }, [\n    state.drawElements,\n    state.draftElement,\n    state.scrollPoint,\n    state.selectedElements,\n  ]);\n\n  function handleMouseMove(ev: React.MouseEvent) {\n    if (ev.target !== canvasRef.current) {\n      return;\n    }\n    const hoveredElement = getDrawElementAtPoint(state.drawElements, [\n      ev.clientX - state.scrollPoint[0],\n      ev.clientY - state.scrollPoint[1],\n    ]);\n    if (hoveredElement) canvasRef.current.style.cursor = \"move\";\n    else canvasRef.current.style.cursor = ORIGINAL_CURSOR_STYLE;\n    dispatch(setHoveredElement(hoveredElement?.id ?? null));\n  }\n\n  return (\n    <div className=\"App\">\n      <Island className=\"App__toolbar\">\n        {elementTypes.map((elementType) => (\n          <button\n            key={elementType}\n            disabled={state.activeTool === elementType}\n            onClick={() => dispatch(setActiveTool(elementType))}\n          >\n            {elementType}\n          </button>\n        ))}\n      </Island>\n      <Island className=\"App__toolbar\">\n        <button disabled={!history.hasPrev} onClick={goBack}>\n          ←\n        </button>\n        <button disabled={!history.hasNext} onClick={goForward}>\n          →\n        </button>\n      </Island>\n      <canvas\n        className=\"App__canvas\"\n        ref={canvasRef}\n        onMouseMove={handleMouseMove}\n      ></canvas>\n    </div>\n  );\n}\n\nfunction getDrawElementAtPoint(\n  drawElements: DrawElement[],\n  point: Point2D\n): DrawElement | null {\n  let hoveredElement: DrawElement | null = null;\n\n  for (let i = drawElements.length - 1; i >= 0; i--) {\n    const element = drawElements[i];\n    const config = drawElementConfigRegistry[element.type];\n    if (config.containsPoint(element.props, point)) {\n      hoveredElement = element;\n      break;\n    }\n  }\n\n  return hoveredElement;\n}\n\nexport default App;\n\nfunction drawScene(\n  ctx: CanvasRenderingContext2D,\n  drawElements: DrawElement[],\n  draftElement: DrawElement | null,\n  selectedElements: GlobalId[],\n  [scrollX, scrollY]: Point2D\n) {\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.translate(scrollX, scrollY);\n\n  drawElements.forEach((drawElement) => {\n    drawElementConfigRegistry[drawElement.type].draw(drawElement.props, ctx);\n  });\n  if (draftElement) {\n    drawElementConfigRegistry[draftElement.type].draw(draftElement.props, ctx);\n  }\n  const selectedElementsSet = new Set(selectedElements);\n  drawElements.forEach((drawElement) => {\n    if (selectedElementsSet.has(drawElement.id)) {\n      drawBoundingBox(drawElement, ctx);\n    }\n  });\n\n  ctx.translate(-scrollX, -scrollY);\n}\n\nconst BOUNDING_BOX_DELTA = 6;\nconst BOUNDING_BOX_LINE_DASH = [5, 5];\n\nfunction drawBoundingBox(\n  drawElement: DrawElement<keyof DrawElements>,\n  ctx: CanvasRenderingContext2D\n) {\n  ctx.save();\n  const boundingBox = drawElementConfigRegistry[\n    drawElement.type\n  ].getBoundingBox(drawElement.props);\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"blue\";\n  ctx.setLineDash(BOUNDING_BOX_LINE_DASH);\n  ctx.strokeRect(\n    boundingBox.x - BOUNDING_BOX_DELTA,\n    boundingBox.y - BOUNDING_BOX_DELTA,\n    boundingBox.width + BOUNDING_BOX_DELTA * 2,\n    boundingBox.height + BOUNDING_BOX_DELTA * 2\n  );\n  ctx.restore();\n}\n\nfunction useCanvasAutoResize(\n  state: AppState,\n  canvasRef: RefObject<HTMLCanvasElement>\n) {\n  const lastState = useRef(state);\n  lastState.current = state;\n\n  useEffect(() => {\n    function resizeCanvas() {\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        return;\n      }\n      const dpr = window.devicePixelRatio || 1;\n      canvas.width = window.innerWidth * dpr;\n      canvas.height = window.innerHeight * dpr;\n      canvas.style.width = window.innerWidth + \"px\";\n      canvas.style.height = window.innerHeight + \"px\";\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx == null) {\n        return;\n      }\n      ctx.scale(dpr, dpr);\n      drawScene(\n        ctx,\n        lastState.current.drawElements,\n        lastState.current.draftElement,\n        lastState.current.selectedElements,\n        lastState.current.scrollPoint\n      );\n    }\n\n    window.addEventListener(\"resize\", resizeCanvas);\n    resizeCanvas();\n    return () => {\n      window.removeEventListener(\"resize\", resizeCanvas);\n    };\n  }, [canvasRef]);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import getStroke from \"perfect-freehand\";\n\nfunction getSvgPathFromStroke(stroke: number[][]) {\n  if (!stroke.length) return \"\";\n\n  const d = stroke.reduce(\n    (acc, [x0, y0], i, arr) => {\n      const [x1, y1] = arr[(i + 1) % arr.length];\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n      return acc;\n    },\n    [\"M\", ...stroke[0], \"Q\"]\n  );\n\n  d.push(\"Z\");\n  return d.join(\" \");\n}\n\nexport function freehandDraw(\n  points: Array<[x: number, y: number]>,\n  color: string,\n  ctx: CanvasRenderingContext2D\n) {\n  const pathData = getSvgPathFromStroke(getStroke(points));\n  ctx.fillStyle = color;\n  ctx.fill(new Path2D(pathData));\n}\n","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\nimport { freehandDraw } from \"../freehand-draw\";\n\nexport interface Draw {\n  color: string;\n  points: Array<[x: number, y: number]>;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Draw: Draw;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Draw\",\n  draw(draw, ctx) {\n    if (draw.points.length === 0) {\n      return;\n    }\n    freehandDraw(draw.points, draw.color, ctx);\n  },\n  onCreate(x, y) {\n    return {\n      color: \"black\",\n      points: [[x, y]],\n    };\n  },\n  onDrawing(dx, dy, draw) {\n    const [x, y] = draw.points[draw.points.length - 1];\n    return {\n      points: [...draw.points, [x + dx, y + dy]] as Array<[number, number]>,\n    };\n  },\n  getBoundingBox(draw) {\n    const x = Math.min(...draw.points.map((p) => p[0]));\n    const y = Math.min(...draw.points.map((p) => p[1]));\n    return {\n      x: x,\n      y: y,\n      width: Math.max(...draw.points.map((p) => p[0])) - x,\n      height: Math.max(...draw.points.map((p) => p[1])) - y,\n    };\n  },\n  containsPoint(draw, [x, y]) {\n    const x0 = Math.min(...draw.points.map((p) => p[0]));\n    const y0 = Math.min(...draw.points.map((p) => p[1]));\n    const x1 = Math.max(...draw.points.map((p) => p[0]));\n    const y1 = Math.max(...draw.points.map((p) => p[1]));\n    return (\n      Math.min(x0, x1) <= x &&\n      Math.max(x0, x1) >= x &&\n      Math.min(y0, y1) <= y &&\n      Math.max(y0, y1) >= y\n    );\n  },\n  shift(draw, [dx, dy]) {\n    return {\n      ...draw,\n      points: draw.points.map(([x, y]) => [x + dx, y + dy]),\n    };\n  },\n});\n"],"sourceRoot":""}
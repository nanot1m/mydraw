{"version":3,"sources":["draw-elements-drawer/DrawElementConfig.ts","draw-elements sync //.element/.ts$","draw-elements/Line.element.ts","draw-elements/Rect.element.ts","draw-elements-drawer/get-draw-element-config-registry.ts","global-id.ts","App.tsx","reportWebVitals.ts","index.tsx","freehand-draw.ts","draw-elements/Draw.element.ts"],"names":["createDrawElementConfig","config","__TYPE__","isDrawElementConfig","obj","Reflect","get","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","name","draw","line","ctx","lineWidth","strokeStyle","color","beginPath","moveTo","x0","y0","lineTo","x1","y1","stroke","onCreate","x","y","onDrawing","dx","dy","rect","strokeColor","fillStyle","backgroundColor","fill","drawElementConfigRegistry","getAllDrawElementConfigs","r","require","TypeError","assertDrawElementConfigModule","reduce","acc","drawElementConfig","elementTypes","initialState","drawElements","draftElement","activeTool","appReducer","state","action","type","element","props","concat","tool","App","canvasRef","useRef","useReducer","dispatch","useEffect","resizeCanvas","canvas","current","dpr","window","devicePixelRatio","width","innerWidth","height","innerHeight","style","getContext","scale","addEventListener","removeEventListener","draftElementRef","activeElementConfig","lastClientX","lastClientY","handlePointerMove","ev","clientX","clientY","handlePointerDown","buttons","Date","now","toString","document","handlePointerUp","clearRect","forEach","drawElement","className","onPointerDown","stopPropagation","elementType","disabled","onClick","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","freehandDraw","points","pathData","length","d","i","arr","push","join","getSvgPathFromStroke","getStroke","Path2D"],"mappings":"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","file":"static/js/main.d1b2ce50.chunk.js","sourcesContent":["import {\n  DrawElementByType,\n  DrawElementType,\n} from \"../draw-elements/DrawElements\";\nimport { DrawElementsDrawer } from \"./DrawElementsDrawer\";\n\nexport interface DrawElementConfig<Type extends DrawElementType> {\n  name: Type;\n  draw: DrawElementsDrawer<Type>;\n  onCreate(x: number, y: number): DrawElementByType<Type>;\n  onDrawing: (\n    dx: number,\n    dy: number,\n    element: DrawElementByType<Type>\n  ) => Partial<DrawElementByType<Type>>;\n}\n\nexport function createDrawElementConfig<Type extends DrawElementType>(\n  config: DrawElementConfig<Type>\n): DrawElementConfig<Type> & { __TYPE__: \"DrawElementConfig\" } {\n  return { ...config, __TYPE__: \"DrawElementConfig\" };\n}\n\nexport function isDrawElementConfig(\n  obj: unknown\n): obj is DrawElementConfig<DrawElementType> {\n  return (\n    typeof obj === \"object\" &&\n    obj != null &&\n    Reflect.get(obj, \"__TYPE__\") === \"DrawElementConfig\"\n  );\n}\n","var map = {\n\t\"./Draw.element.ts\": 22,\n\t\"./Line.element.ts\": 18,\n\t\"./Rect.element.ts\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\n\nexport interface Line {\n  color: string;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Line: Line;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Line\",\n  draw(line, ctx) {\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = line.color;\n    ctx.beginPath();\n    ctx.moveTo(line.x0, line.y0);\n    ctx.lineTo(line.x1, line.y1);\n    ctx.stroke();\n  },\n  onCreate(x: number, y: number) {\n    return {\n      color: \"#000000\",\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y,\n    };\n  },\n  onDrawing(dx: number, dy: number, line: Line) {\n    return {\n      x1: line.x1 + dx,\n      y1: line.y1 + dy,\n    };\n  },\n});\n","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\n\nexport interface Rect {\n  strokeColor: string;\n  backgroundColor: string;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Rect: Rect;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Rect\",\n  draw(rect, ctx) {\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = rect.strokeColor;\n    ctx.fillStyle = rect.backgroundColor;\n    ctx.beginPath();\n    ctx.rect(rect.x0, rect.y0, rect.x1 - rect.x0, rect.y1 - rect.y0);\n    ctx.fill();\n    ctx.stroke();\n  },\n  onCreate(x, y) {\n    return {\n      backgroundColor: \"pink\",\n      strokeColor: \"black\",\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y,\n    };\n  },\n  onDrawing(dx, dy, rect) {\n    return {\n      x1: rect.x1 + dx,\n      y1: rect.y1 + dy,\n    };\n  },\n});\n","import { DrawElementType } from \"../draw-elements/DrawElements\";\nimport { DrawElementConfig, isDrawElementConfig } from \"./DrawElementConfig\";\n\nfunction importAll(r: __WebpackModuleApi.RequireContext) {\n  return r.keys().map(r);\n}\n\nfunction assertDrawElementConfigModule(\n  module: unknown\n): asserts module is { config: DrawElementConfig<any> } {\n  if (\n    typeof module !== \"object\" ||\n    module == null ||\n    !isDrawElementConfig(Reflect.get(module, \"config\"))\n  ) {\n    throw new TypeError(\n      \"*.element.ts files must be a module exporting `config` object\"\n    );\n  }\n}\n\nfunction getAllDrawElementConfigs(): DrawElementConfig<DrawElementType>[] {\n  return importAll(\n    require.context(\"../draw-elements/\", true, /\\.element\\.ts$/)\n  ).map((module) => {\n    assertDrawElementConfigModule(module);\n    return module.config;\n  });\n}\n\nlet drawElementConfigRegistry: Record<DrawElementType, DrawElementConfig<any>>;\n\nexport function getDrawElementConfigRegistry() {\n  if (drawElementConfigRegistry != null) {\n    return drawElementConfigRegistry;\n  }\n\n  drawElementConfigRegistry = getAllDrawElementConfigs().reduce(\n    (acc, drawElementConfig) => {\n      acc[drawElementConfig.name] = drawElementConfig;\n      return acc;\n    },\n    {} as Record<DrawElementType, DrawElementConfig<any>>\n  );\n\n  return drawElementConfigRegistry;\n}\n","export type GlobalId = string & { __TYPE__: \"GlobalId\" };\n\nlet id = 0;\nexport function getId(): GlobalId {\n  id++;\n  return (Date.now() + id).toString(32) as GlobalId;\n}\n","import { useEffect, useReducer, useRef } from \"react\";\nimport {\n  DrawElementByType,\n  DrawElements,\n  DrawElementType,\n} from \"./draw-elements/DrawElements\";\nimport \"./App.css\";\nimport { getDrawElementConfigRegistry } from \"./draw-elements-drawer/get-draw-element-config-registry\";\nimport { getId, GlobalId } from \"./global-id\";\n\ninterface DrawElement<Type extends keyof DrawElements = DrawElementType> {\n  type: Type;\n  id: GlobalId;\n  props: DrawElements[Type];\n}\n\nconst drawElementConfigRegistry = getDrawElementConfigRegistry();\n\nconst elementTypes = Object.keys(\n  drawElementConfigRegistry\n) as DrawElementType[];\n\ninterface AppState {\n  drawElements: DrawElement[];\n  draftElement: DrawElement | null;\n  activeTool: DrawElementType;\n}\n\nconst initialState: AppState = {\n  drawElements: [],\n  draftElement: null,\n  activeTool: elementTypes[0],\n};\n\nfunction createDraftElement(drawElement: DrawElement) {\n  return { type: \"createDraftElement\", element: drawElement } as const;\n}\n\nfunction updateDraftElement<Type extends DrawElementType>(\n  props: Partial<DrawElementByType<Type>>\n) {\n  return { type: \"updateDraftElement\", props } as const;\n}\n\nfunction saveDraftElement() {\n  return { type: \"saveDraftElement\" } as const;\n}\n\nfunction setActiveTool(tool: DrawElementType) {\n  return { type: \"setActiveTool\", tool } as const;\n}\n\ntype Action =\n  | ReturnType<typeof createDraftElement>\n  | ReturnType<typeof saveDraftElement>\n  | ReturnType<typeof setActiveTool>\n  | ReturnType<typeof updateDraftElement>;\n\nfunction appReducer(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case \"createDraftElement\":\n      return {\n        ...state,\n        draftElement: action.element,\n      };\n\n    case \"updateDraftElement\":\n      if (!state.draftElement) {\n        return state;\n      }\n      return {\n        ...state,\n        draftElement: {\n          ...state.draftElement,\n          props: {\n            ...state.draftElement.props,\n            ...action.props,\n          },\n        },\n      };\n\n    case \"saveDraftElement\":\n      if (!state.draftElement) {\n        return state;\n      }\n      return {\n        ...state,\n        drawElements: state.drawElements.concat(state.draftElement),\n        draftElement: null,\n      };\n\n    case \"setActiveTool\":\n      return {\n        ...state,\n        activeTool: action.tool,\n      };\n  }\n}\n\nfunction App() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  useEffect(() => {\n    function resizeCanvas() {\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        return;\n      }\n      const dpr = window.devicePixelRatio || 1;\n      canvas.width = window.innerWidth * dpr;\n      canvas.height = window.innerHeight * dpr;\n      canvas.style.width = window.innerWidth + \"px\";\n      canvas.style.height = window.innerHeight + \"px\";\n      canvas.getContext(\"2d\")?.scale(dpr, dpr);\n    }\n\n    window.addEventListener(\"resize\", resizeCanvas);\n    resizeCanvas();\n    return () => {\n      window.removeEventListener(\"resize\", resizeCanvas);\n    };\n  }, []);\n\n  const draftElementRef = useRef(state.draftElement);\n  draftElementRef.current = state.draftElement;\n\n  useEffect(() => {\n    const activeElementConfig = drawElementConfigRegistry[state.activeTool];\n\n    let lastClientX = 0;\n    let lastClientY = 0;\n\n    function handlePointerMove(ev: MouseEvent) {\n      if (draftElementRef.current == null) {\n        return;\n      }\n      dispatch(\n        updateDraftElement(\n          activeElementConfig.onDrawing(\n            ev.clientX - lastClientX,\n            ev.clientY - lastClientY,\n            draftElementRef.current.props\n          )\n        )\n      );\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n    }\n\n    function handlePointerDown(ev: MouseEvent) {\n      if (ev.buttons !== 1) {\n        return;\n      }\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n      dispatch(\n        createDraftElement({\n          id: getId(),\n          type: state.activeTool,\n          props: activeElementConfig.onCreate(ev.clientX, ev.clientY),\n        })\n      );\n      document.addEventListener(\"pointermove\", handlePointerMove);\n    }\n\n    function handlePointerUp() {\n      dispatch(saveDraftElement());\n      document.removeEventListener(\"pointermove\", handlePointerMove);\n    }\n\n    document.addEventListener(\"pointerdown\", handlePointerDown);\n    document.addEventListener(\"pointerup\", handlePointerUp);\n\n    return () => {\n      document.removeEventListener(\"pointerdown\", handlePointerDown);\n      document.removeEventListener(\"pointerup\", handlePointerUp);\n    };\n  }, [state.activeTool]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas == null) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx == null) {\n      return;\n    }\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    state.drawElements.forEach((drawElement) => {\n      drawElementConfigRegistry[drawElement.type].draw(drawElement.props, ctx);\n    });\n    if (state.draftElement) {\n      drawElementConfigRegistry[state.draftElement.type].draw(\n        state.draftElement.props,\n        ctx\n      );\n    }\n  }, [state.drawElements, state.draftElement]);\n\n  return (\n    <div className=\"App\">\n      <div\n        className=\"App__toolbar\"\n        onPointerDown={(ev) => ev.stopPropagation()}\n      >\n        {elementTypes.map((elementType) => (\n          <button\n            key={elementType}\n            disabled={state.activeTool === elementType}\n            onClick={() => dispatch(setActiveTool(elementType))}\n          >\n            {elementType}\n          </button>\n        ))}\n      </div>\n      <canvas className=\"App__canvas\" ref={canvasRef}></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import getStroke from \"perfect-freehand\";\n\nfunction getSvgPathFromStroke(stroke: number[][]) {\n  if (!stroke.length) return \"\";\n\n  const d = stroke.reduce(\n    (acc, [x0, y0], i, arr) => {\n      const [x1, y1] = arr[(i + 1) % arr.length];\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n      return acc;\n    },\n    [\"M\", ...stroke[0], \"Q\"]\n  );\n\n  d.push(\"Z\");\n  return d.join(\" \");\n}\n\nexport function freehandDraw(\n  points: Array<[x: number, y: number]>,\n  color: string,\n  ctx: CanvasRenderingContext2D\n) {\n  const pathData = getSvgPathFromStroke(getStroke(points));\n  ctx.fillStyle = color;\n  ctx.fill(new Path2D(pathData));\n}\n","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\nimport { freehandDraw } from \"../freehand-draw\";\n\nexport interface Draw {\n  color: string;\n  points: Array<[x: number, y: number]>;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Draw: Draw;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Draw\",\n  draw(draw, ctx) {\n    if (draw.points.length === 0) {\n      return;\n    }\n    freehandDraw(draw.points, draw.color, ctx);\n  },\n  onCreate(x, y) {\n    return {\n      color: \"black\",\n      points: [[x, y]],\n    };\n  },\n  onDrawing(dx, dy, draw) {\n    const [x, y] = draw.points[draw.points.length - 1];\n    return {\n      points: [...draw.points, [x + dx, y + dy]] as Array<[number, number]>,\n    };\n  },\n});\n"],"sourceRoot":""}
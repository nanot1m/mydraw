{"version":3,"sources":["draw-elements-drawer/DrawElementConfig.ts","draw-elements sync //.element/.ts$","draw-elements/Line.element.ts","draw-elements/Rect.element.ts","draw-elements-drawer/get-draw-element-config-registry.ts","global-id.ts","Island.tsx","state-history.ts","App.tsx","reportWebVitals.ts","index.tsx","freehand-draw.ts","draw-elements/Draw.element.ts"],"names":["createDrawElementConfig","config","__TYPE__","isDrawElementConfig","obj","Reflect","get","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","name","draw","line","ctx","lineWidth","strokeStyle","color","beginPath","moveTo","x0","y0","lineTo","x1","y1","stroke","onCreate","x","y","onDrawing","dx","dy","rect","strokeColor","fillStyle","backgroundColor","fill","drawElementConfigRegistry","getAllDrawElementConfigs","r","require","TypeError","assertDrawElementConfigModule","Island","props","className","children","linkedListNode","value","prev","next","StateHistory","maxLength","this","newNode","reduce","acc","drawElementConfig","elementTypes","initialState","drawElements","draftElement","activeTool","scrollPoint","setDrawElements","type","appReducer","state","action","element","concat","tool","scrollPointShift","App","canvasRef","useRef","useReducer","dispatch","history","useState","of","hasNext","setHasNext","hasPrev","setHasPrev","useEffect","push","goBack","goForward","useHistory","lastState","current","resizeCanvas","canvas","dpr","window","devicePixelRatio","width","innerWidth","height","innerHeight","style","getContext","scale","drawScene","addEventListener","removeEventListener","useCanvasAutoResize","draftElementRef","activeElementConfig","lastClientX","lastClientY","handlePointerDown","ev","target","clientX","clientY","buttons","Date","now","toString","document","handlePointerMoveWhileDrawing","handlePointerUpWhileDrawing","handlePointerMoveWhileScrolling","handlePointerUpWhileScrolling","elementType","disabled","onClick","ref","scrollX","scrollY","clearRect","translate","forEach","drawElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","freehandDraw","points","pathData","length","d","i","arr","join","getSvgPathFromStroke","getStroke","Path2D"],"mappings":"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","file":"static/js/main.b089b2b8.chunk.js","sourcesContent":["import {\n  DrawElementByType,\n  DrawElementType,\n} from \"../draw-elements/DrawElements\";\nimport { DrawElementsDrawer } from \"./DrawElementsDrawer\";\n\nexport interface DrawElementConfig<Type extends DrawElementType> {\n  name: Type;\n  draw: DrawElementsDrawer<Type>;\n  onCreate(x: number, y: number): DrawElementByType<Type>;\n  onDrawing: (\n    dx: number,\n    dy: number,\n    element: DrawElementByType<Type>\n  ) => Partial<DrawElementByType<Type>>;\n}\n\nexport function createDrawElementConfig<Type extends DrawElementType>(\n  config: DrawElementConfig<Type>\n): DrawElementConfig<Type> & { __TYPE__: \"DrawElementConfig\" } {\n  return { ...config, __TYPE__: \"DrawElementConfig\" };\n}\n\nexport function isDrawElementConfig(\n  obj: unknown\n): obj is DrawElementConfig<DrawElementType> {\n  return (\n    typeof obj === \"object\" &&\n    obj != null &&\n    Reflect.get(obj, \"__TYPE__\") === \"DrawElementConfig\"\n  );\n}\n","var map = {\n\t\"./Draw.element.ts\": 27,\n\t\"./Line.element.ts\": 22,\n\t\"./Rect.element.ts\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\n\nexport interface Line {\n  color: string;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Line: Line;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Line\",\n  draw(line, ctx) {\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = line.color;\n    ctx.beginPath();\n    ctx.moveTo(line.x0, line.y0);\n    ctx.lineTo(line.x1, line.y1);\n    ctx.stroke();\n  },\n  onCreate(x: number, y: number) {\n    return {\n      color: \"#000000\",\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y,\n    };\n  },\n  onDrawing(dx: number, dy: number, line: Line) {\n    return {\n      x1: line.x1 + dx,\n      y1: line.y1 + dy,\n    };\n  },\n});\n","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\n\nexport interface Rect {\n  strokeColor: string;\n  backgroundColor: string;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Rect: Rect;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Rect\",\n  draw(rect, ctx) {\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = rect.strokeColor;\n    ctx.fillStyle = rect.backgroundColor;\n    ctx.beginPath();\n    ctx.rect(rect.x0, rect.y0, rect.x1 - rect.x0, rect.y1 - rect.y0);\n    ctx.fill();\n    ctx.stroke();\n  },\n  onCreate(x, y) {\n    return {\n      backgroundColor: \"pink\",\n      strokeColor: \"black\",\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y,\n    };\n  },\n  onDrawing(dx, dy, rect) {\n    return {\n      x1: rect.x1 + dx,\n      y1: rect.y1 + dy,\n    };\n  },\n});\n","import { DrawElementType } from \"../draw-elements/DrawElements\";\nimport { DrawElementConfig, isDrawElementConfig } from \"./DrawElementConfig\";\n\nfunction importAll(r: __WebpackModuleApi.RequireContext) {\n  return r.keys().map(r);\n}\n\nfunction assertDrawElementConfigModule(\n  module: unknown\n): asserts module is { config: DrawElementConfig<any> } {\n  if (\n    typeof module !== \"object\" ||\n    module == null ||\n    !isDrawElementConfig(Reflect.get(module, \"config\"))\n  ) {\n    throw new TypeError(\n      \"*.element.ts files must be a module exporting `config` object\"\n    );\n  }\n}\n\nfunction getAllDrawElementConfigs(): DrawElementConfig<DrawElementType>[] {\n  return importAll(\n    require.context(\"../draw-elements/\", true, /\\.element\\.ts$/)\n  ).map((module) => {\n    assertDrawElementConfigModule(module);\n    return module.config;\n  });\n}\n\nlet drawElementConfigRegistry: Record<DrawElementType, DrawElementConfig<any>>;\n\nexport function getDrawElementConfigRegistry() {\n  if (drawElementConfigRegistry != null) {\n    return drawElementConfigRegistry;\n  }\n\n  drawElementConfigRegistry = getAllDrawElementConfigs().reduce(\n    (acc, drawElementConfig) => {\n      acc[drawElementConfig.name] = drawElementConfig;\n      return acc;\n    },\n    {} as Record<DrawElementType, DrawElementConfig<any>>\n  );\n\n  return drawElementConfigRegistry;\n}\n","export type GlobalId = string & { __TYPE__: \"GlobalId\" };\n\nlet id = 0;\nexport function getId(): GlobalId {\n  id++;\n  return (Date.now() + id).toString(32) as GlobalId;\n}\n","import { ReactNode } from \"react\";\n\nimport \"./Island.css\";\n\nexport function Island(props: { children: ReactNode; className?: string }) {\n  return (\n    <div className={\"Island\" + (props.className ? ` ${props.className}` : \"\")}>\n      {props.children}\n    </div>\n  );\n}\n","interface LinkedListNode<T> {\n  value: T;\n  next: LinkedListNode<T> | null;\n  prev: LinkedListNode<T> | null;\n}\n\nfunction linkedListNode<T>(\n  value: T,\n  prev: LinkedListNode<T> | null = null,\n  next: LinkedListNode<T> | null = null\n): LinkedListNode<T> {\n  return {\n    value,\n    next,\n    prev,\n  };\n}\n\nexport class StateHistory<T> {\n  public static of<T>(value: T, maxLength = 100) {\n    return new StateHistory(value, maxLength);\n  }\n\n  #maxLength: number;\n\n  #size = 1;\n\n  #head: LinkedListNode<T>;\n\n  #curNode: LinkedListNode<T>;\n\n  private constructor(value: T, maxLength: number) {\n    this.#head = this.#curNode = linkedListNode(value);\n    this.#maxLength = maxLength;\n  }\n\n  public get(): T {\n    return this.#curNode.value;\n  }\n\n  public push(value: T) {\n    const newNode = linkedListNode(value, this.#curNode);\n    this.#curNode.next = newNode;\n    this.#curNode = newNode;\n    this.#size++;\n\n    while (this.#size > this.#maxLength && this.#head.next) {\n      if (this.#curNode === this.#head && this.#curNode.next) {\n        this.#curNode = this.#curNode.next;\n        this.#curNode.prev = null;\n      }\n      this.#head = this.#head.next;\n      this.#head.prev = null;\n      this.#size--;\n    }\n\n    return this;\n  }\n\n  public goBack() {\n    if (this.#curNode.prev != null) {\n      this.#curNode = this.#curNode.prev;\n      this.#size--;\n    }\n    return this;\n  }\n\n  public goForward() {\n    if (this.#curNode.next != null) {\n      this.#curNode = this.#curNode.next;\n      this.#size++;\n    }\n    return this;\n  }\n\n  public hasPrev() {\n    return this.#curNode.prev != null;\n  }\n\n  public hasNext() {\n    return this.#curNode.next != null;\n  }\n}\n","import { RefObject, useEffect, useReducer, useRef, useState } from \"react\";\nimport {\n  DrawElementByType,\n  DrawElements,\n  DrawElementType,\n} from \"./draw-elements/DrawElements\";\nimport \"./App.css\";\nimport { getDrawElementConfigRegistry } from \"./draw-elements-drawer/get-draw-element-config-registry\";\nimport { getId, GlobalId } from \"./global-id\";\nimport { Island } from \"./Island\";\nimport { StateHistory } from \"./state-history\";\n\ninterface DrawElement<Type extends keyof DrawElements = DrawElementType> {\n  type: Type;\n  id: GlobalId;\n  props: DrawElements[Type];\n}\n\nconst drawElementConfigRegistry = getDrawElementConfigRegistry();\n\nconst elementTypes = Object.keys(\n  drawElementConfigRegistry\n) as DrawElementType[];\n\ninterface AppState {\n  drawElements: DrawElement[];\n  draftElement: DrawElement | null;\n  activeTool: DrawElementType;\n  scrollPoint: Point2D;\n}\n\nconst initialState: AppState = {\n  drawElements: [],\n  draftElement: null,\n  activeTool: elementTypes[0],\n  scrollPoint: [0, 0],\n};\n\nfunction createDraftElement(drawElement: DrawElement) {\n  return { type: \"createDraftElement\", element: drawElement } as const;\n}\n\nfunction updateDraftElement<Type extends DrawElementType>(\n  props: Partial<DrawElementByType<Type>>\n) {\n  return { type: \"updateDraftElement\", props } as const;\n}\n\nfunction saveDraftElement() {\n  return { type: \"saveDraftElement\" } as const;\n}\n\nfunction updateScrollPoint(scrollPointShift: Point2D) {\n  return { type: \"updateScrollPoint\", scrollPointShift } as const;\n}\n\nfunction setActiveTool(tool: DrawElementType) {\n  return { type: \"setActiveTool\", tool } as const;\n}\n\nfunction setDrawElements(drawElements: DrawElement[]) {\n  return { type: \"setDrawElements\", drawElements } as const;\n}\n\ntype Action =\n  | ReturnType<typeof createDraftElement>\n  | ReturnType<typeof saveDraftElement>\n  | ReturnType<typeof setActiveTool>\n  | ReturnType<typeof setDrawElements>\n  | ReturnType<typeof updateScrollPoint>\n  | ReturnType<typeof updateDraftElement>;\n\nfunction appReducer(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case \"createDraftElement\":\n      return {\n        ...state,\n        draftElement: action.element,\n      };\n\n    case \"updateDraftElement\":\n      if (!state.draftElement) {\n        return state;\n      }\n      return {\n        ...state,\n        draftElement: {\n          ...state.draftElement,\n          props: {\n            ...state.draftElement.props,\n            ...action.props,\n          },\n        },\n      };\n\n    case \"saveDraftElement\":\n      if (!state.draftElement) {\n        return state;\n      }\n      return {\n        ...state,\n        drawElements: state.drawElements.concat(state.draftElement),\n        draftElement: null,\n      };\n\n    case \"setActiveTool\":\n      return {\n        ...state,\n        activeTool: action.tool,\n      };\n\n    case \"setDrawElements\":\n      return {\n        ...state,\n        drawElements: action.drawElements,\n      };\n\n    case \"updateScrollPoint\":\n      return {\n        ...state,\n        scrollPoint: [\n          state.scrollPoint[0] + action.scrollPointShift[0],\n          state.scrollPoint[1] + action.scrollPointShift[1],\n        ],\n      };\n  }\n}\n\nfunction useHistory<T>(state: T) {\n  const [history] = useState(() => StateHistory.of(state));\n  const [hasNext, setHasNext] = useState(history.hasNext());\n  const [hasPrev, setHasPrev] = useState(history.hasPrev());\n\n  useEffect(() => {\n    if (history.get() !== state) {\n      history.push(state);\n      setHasPrev(history.hasPrev());\n      setHasNext(history.hasNext());\n    }\n  }, [history, state]);\n\n  return {\n    hasPrev,\n    hasNext,\n    goBack() {\n      history.goBack();\n      setHasPrev(history.hasPrev());\n      setHasNext(history.hasNext());\n      return history.get();\n    },\n    goForward() {\n      history.goForward();\n      setHasPrev(history.hasPrev());\n      setHasNext(history.hasNext());\n      return history.get();\n    },\n  };\n}\n\nfunction App() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  const history = useHistory(state.drawElements);\n\n  function goBack() {\n    if (history.hasPrev) {\n      const drawElements = history.goBack();\n      dispatch(setDrawElements(drawElements));\n    }\n  }\n\n  function goForward() {\n    if (history.hasNext) {\n      const drawElements = history.goForward();\n      dispatch(setDrawElements(drawElements));\n    }\n  }\n\n  useCanvasAutoResize(state, canvasRef);\n\n  const draftElementRef = useRef(state.draftElement);\n  draftElementRef.current = state.draftElement;\n\n  useEffect(() => {\n    const activeElementConfig = drawElementConfigRegistry[state.activeTool];\n\n    let lastClientX = 0;\n    let lastClientY = 0;\n\n    function handlePointerDown(ev: MouseEvent) {\n      if (ev.target !== canvasRef.current) {\n        return;\n      }\n\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n\n      if (ev.buttons === 1) {\n        dispatch(\n          createDraftElement({\n            id: getId(),\n            type: state.activeTool,\n            props: activeElementConfig.onCreate(\n              ev.clientX - state.scrollPoint[0],\n              ev.clientY - state.scrollPoint[1]\n            ),\n          })\n        );\n        document.addEventListener(\"pointermove\", handlePointerMoveWhileDrawing);\n        document.addEventListener(\"pointerup\", handlePointerUpWhileDrawing);\n      }\n      if (ev.buttons === 4) {\n        document.addEventListener(\n          \"pointermove\",\n          handlePointerMoveWhileScrolling\n        );\n        document.addEventListener(\"pointerup\", handlePointerUpWhileScrolling);\n      }\n    }\n\n    function handlePointerMoveWhileScrolling(ev: MouseEvent) {\n      const dx = ev.clientX - lastClientX;\n      const dy = ev.clientY - lastClientY;\n      dispatch(updateScrollPoint([dx, dy]));\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n    }\n\n    function handlePointerUpWhileScrolling() {\n      document.removeEventListener(\n        \"pointermove\",\n        handlePointerMoveWhileScrolling\n      );\n      document.removeEventListener(\"pointerup\", handlePointerUpWhileScrolling);\n    }\n\n    function handlePointerMoveWhileDrawing(ev: MouseEvent) {\n      if (draftElementRef.current == null) {\n        return;\n      }\n      dispatch(\n        updateDraftElement(\n          activeElementConfig.onDrawing(\n            ev.clientX - lastClientX,\n            ev.clientY - lastClientY,\n            draftElementRef.current.props\n          )\n        )\n      );\n      lastClientX = ev.clientX;\n      lastClientY = ev.clientY;\n    }\n\n    function handlePointerUpWhileDrawing() {\n      dispatch(saveDraftElement());\n      document.removeEventListener(\n        \"pointermove\",\n        handlePointerMoveWhileDrawing\n      );\n      document.removeEventListener(\"pointerup\", handlePointerUpWhileDrawing);\n    }\n\n    document.addEventListener(\"pointerdown\", handlePointerDown);\n\n    return () => {\n      document.removeEventListener(\"pointerdown\", handlePointerDown);\n    };\n  }, [state.activeTool, state.scrollPoint]);\n\n  useEffect(() => {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (ctx == null) {\n      return;\n    }\n    drawScene(ctx, state.drawElements, state.draftElement, state.scrollPoint);\n  }, [state.drawElements, state.draftElement, state.scrollPoint]);\n\n  return (\n    <div className=\"App\">\n      <Island className=\"App__toolbar\">\n        {elementTypes.map((elementType) => (\n          <button\n            key={elementType}\n            disabled={state.activeTool === elementType}\n            onClick={() => dispatch(setActiveTool(elementType))}\n          >\n            {elementType}\n          </button>\n        ))}\n      </Island>\n      <Island className=\"App__toolbar\">\n        <button disabled={!history.hasPrev} onClick={goBack}>\n          ←\n        </button>\n        <button disabled={!history.hasNext} onClick={goForward}>\n          →\n        </button>\n      </Island>\n      <canvas className=\"App__canvas\" ref={canvasRef}></canvas>\n    </div>\n  );\n}\n\nexport default App;\n\ntype Point2D = [x: number, y: number];\n\nfunction drawScene(\n  ctx: CanvasRenderingContext2D,\n  drawElements: DrawElement[],\n  draftElement: DrawElement | null,\n  [scrollX, scrollY]: Point2D\n) {\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.translate(scrollX, scrollY);\n\n  drawElements.forEach((drawElement) => {\n    drawElementConfigRegistry[drawElement.type].draw(drawElement.props, ctx);\n  });\n  if (draftElement) {\n    drawElementConfigRegistry[draftElement.type].draw(draftElement.props, ctx);\n  }\n\n  ctx.translate(-scrollX, -scrollY);\n}\n\nfunction useCanvasAutoResize(\n  state: AppState,\n  canvasRef: RefObject<HTMLCanvasElement>\n) {\n  const lastState = useRef(state);\n  lastState.current = state;\n\n  useEffect(() => {\n    function resizeCanvas() {\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        return;\n      }\n      const dpr = window.devicePixelRatio || 1;\n      canvas.width = window.innerWidth * dpr;\n      canvas.height = window.innerHeight * dpr;\n      canvas.style.width = window.innerWidth + \"px\";\n      canvas.style.height = window.innerHeight + \"px\";\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx == null) {\n        return;\n      }\n      ctx.scale(dpr, dpr);\n      drawScene(\n        ctx,\n        lastState.current.drawElements,\n        lastState.current.draftElement,\n        lastState.current.scrollPoint\n      );\n    }\n\n    window.addEventListener(\"resize\", resizeCanvas);\n    resizeCanvas();\n    return () => {\n      window.removeEventListener(\"resize\", resizeCanvas);\n    };\n  }, [canvasRef]);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import getStroke from \"perfect-freehand\";\n\nfunction getSvgPathFromStroke(stroke: number[][]) {\n  if (!stroke.length) return \"\";\n\n  const d = stroke.reduce(\n    (acc, [x0, y0], i, arr) => {\n      const [x1, y1] = arr[(i + 1) % arr.length];\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n      return acc;\n    },\n    [\"M\", ...stroke[0], \"Q\"]\n  );\n\n  d.push(\"Z\");\n  return d.join(\" \");\n}\n\nexport function freehandDraw(\n  points: Array<[x: number, y: number]>,\n  color: string,\n  ctx: CanvasRenderingContext2D\n) {\n  const pathData = getSvgPathFromStroke(getStroke(points));\n  ctx.fillStyle = color;\n  ctx.fill(new Path2D(pathData));\n}\n","import { createDrawElementConfig } from \"../draw-elements-drawer/DrawElementConfig\";\nimport { freehandDraw } from \"../freehand-draw\";\n\nexport interface Draw {\n  color: string;\n  points: Array<[x: number, y: number]>;\n}\n\ndeclare module \"./DrawElements\" {\n  interface DrawElements {\n    Draw: Draw;\n  }\n}\n\nexport const config = createDrawElementConfig({\n  name: \"Draw\",\n  draw(draw, ctx) {\n    if (draw.points.length === 0) {\n      return;\n    }\n    freehandDraw(draw.points, draw.color, ctx);\n  },\n  onCreate(x, y) {\n    return {\n      color: \"black\",\n      points: [[x, y]],\n    };\n  },\n  onDrawing(dx, dy, draw) {\n    const [x, y] = draw.points[draw.points.length - 1];\n    return {\n      points: [...draw.points, [x + dx, y + dy]] as Array<[number, number]>,\n    };\n  },\n});\n"],"sourceRoot":""}